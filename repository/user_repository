// repository/user_repository.go
package repository

import (
	"campus_forum/models"
)

// UserRepository 用户数据访问层
type UserRepository struct {
	BaseRepository
}

// Create 创建用户
func (r *UserRepository) Create(user *models.User) error {
	return r.DB().Create(user).Error
}

// FindByID 根据ID查找用户
func (r *UserRepository) FindByID(id uint) (*models.User, error) {
	var user models.User
	err := r.DB().First(&user, id).Error
	return &user, err
}

// FindByUsername 根据用户名查找用户
func (r *UserRepository) FindByUsername(username string) (*models.User, error) {
	var user models.User
	err := r.DB().Where("username = ?", username).First(&user).Error
	return &user, err
}

// FindByEmail 根据邮箱查找用户
func (r *UserRepository) FindByEmail(email string) (*models.User, error) {
	var user models.User
	err := r.DB().Where("email = ?", email).First(&user).Error
	return &user, err
}

// Update 更新用户
func (r *UserRepository) Update(user *models.User) error {
	return r.DB().Save(user).Error
}

// Delete 删除用户
func (r *UserRepository) Delete(user *models.User) error {
	return r.DB().Delete(user).Error
}

// Count 统计用户数量
func (r *UserRepository) Count() (int64, error) {
	var count int64
	err := r.DB().Model(&models.User{}).Count(&count).Error
	return count, err
}
